#!/bin/sh
# gitwatch - Watch a git repository for changes
# Copyright (C) 2015 Mansour Behabadi <mansour@oxplot.com>
# MIT license, see License.md
#
# Usage: gitwatch <repo-url> <branch> <cmd> [<arg> [<arg> ...]]
#
# <cmd> is called once per new commit and receives the diff of each
# commit in its stdin. Following env variables are set for <cmd>:
#   GW_FROM, GW_TO:     commit hashes for which diff is output
#   GW_URL,  GW_BRANCH: repo's URL and branch as passed to gitwatch
#   GW_GIT_DIR:         local clone's git directory

if [ "$#" -lt 3 ]
then
  echo 'Usage: gitwatch <repo-url> <branch> <cmd> [<arg> ...]' 1>&2
  exit 1
fi

URL="$1"
BRANCH="$2"
shift 2
CMD="$@"

function die { echo "$@" 1>&2; exit 1; }

if [ "$GW_CACHE" = "" ]; then GW_CACHE=~/.cache/gitwatch; fi

GIT_DIR="$GW_CACHE/$(echo -n "2:$URL" | md5sum | tr -cd 'a-f0-9')"
OLD_COMMIT_PATH="$GIT_DIR/old-commit-$BRANCH"

# Updating local cache

mkdir -p $(dirname "$GIT_DIR") || die "gw: failed to create cache dir"

if [ -d "$GIT_DIR" ]
then
  git --git-dir="$GIT_DIR" fetch origin "$BRANCH" 1>&2 ||
    die "gw: git fetch failed"
else
  git clone --single-branch --bare --branch "$BRANCH" \
    -c remote.origin.fetch='+refs/heads/*:refs/heads/*' \
    "$URL" "$GIT_DIR" 1>&2 || die "gw: git clone failed"
fi

# Diffing

cd "$GIT_DIR" || die "gw: cannot cd to git dir"

if [ ! -f "$OLD_COMMIT_PATH" ]
then
  git show-ref -s "$BRANCH" > "$OLD_COMMIT_PATH" ||
    die "gw: failed to get latest commit"
fi

git rev-list --full-history --parents --first-parent \
  --min-parents=1 "$(cat "$OLD_COMMIT_PATH")..$BRANCH" |
  while read to_sha1 from_sha1 x
  do
    git diff "$from_sha1".."$to_sha1" |
      GW_FROM="$from_sha1" GW_TO="$to_sha1" GW_GIT_DIR="$GIT_DIR" \
      GW_BRANCH="$BRANCH" GW_URL="$URL" sh -c "$CMD"
  done

git show-ref -s "$BRANCH" > "$OLD_COMMIT_PATH" ||
  die "gw: failed to get latest commit"
